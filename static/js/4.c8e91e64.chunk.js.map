{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","redux/phonebook/phone-operations.js","redux/phonebook/phone-selectors.js","components/ContactList/ContactList.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","views/Contacts.js"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","axios","defaults","baseURL","getLoading","state","contacts","loading","getFilter","filter","getAllContacts","items","getVisibleContacts","createSelector","filterV","normalizedFilter","toLowerCase","contact","name","includes","Contacts","dispatch","useDispatch","useEffect","fetchContactsRequest","get","then","data","fetchContactsSuccess","catch","error","fetchContactsError","useSelector","className","map","id","number","type","onClick","contactId","deleteContactRequest","delete","deleteContactSuccess","deleteContactError","ContactForm","useState","setName","setNumber","handleChange","e","target","onSubmit","preventDefault","find","alert","addContactRequest","post","addContactSuccess","addContactError","addContact","onChange","pattern","title","required","Filter","changeFilter","isLoading","ContactList"],"mappings":"6LAIe,SAASA,EAAeC,EAAKC,GAC1C,OCLa,SAAyBD,GACtC,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKC,GACjD,GAAsB,qBAAXG,QAA4BA,OAAOC,YAAYC,OAAON,GAAjE,CACA,IAAIO,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKb,EAAII,OAAOC,cAAmBG,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAGK,QAEThB,GAAKM,EAAKW,SAAWjB,GAH8CO,GAAK,IAK9E,MAAOW,GACPV,GAAK,EACLC,EAAKS,EACL,QACA,IACOX,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFnBuB,CAAqBP,EAAKC,IAAM,OAAAmB,EAAA,GAA2BpB,EAAKC,IGLjF,WACb,MAAM,IAAIoB,UAAU,6IHIgF,K,kIIQtGC,IAAMC,SAASC,QAAU,wCAElB,I,QCbMC,EAAa,SAAAC,GAAK,OAAIA,EAAMC,SAASC,SAErCC,EAAY,SAAAH,GAAK,OAAIA,EAAMC,SAASG,QAEpCC,EAAiB,SAAAL,GAAK,OAAIA,EAAMC,SAASK,OAEzCC,EAAqBC,YAChC,CAACH,EAAgBF,IACjB,SAACF,EAAUQ,GACT,IAAMC,EAAmBD,EAAQE,cAEjC,OAAOV,EAASG,QAAO,SAAAQ,GAAO,OAC5BA,EAAQC,KAAKF,cAAcG,SAASJ,S,OCqB3BK,EA1BE,WACf,IAAMC,EAAWC,cAEjBC,qBAAU,kBAAMF,GFGiB,SAAAA,GACjCA,EAASG,eACTvB,IACGwB,IAAI,aACJC,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OAAcN,EAASO,YAAqBD,OACjDE,OAAM,SAAAC,GAAK,OAAIT,EAASU,YAAmBD,YERH,CAACT,IAE5C,IAAMf,EAAW0B,YAAYpB,GAE7B,OACE,oBAAIqB,UAAU,eAAd,SACG3B,EAAS4B,KAAI,gBAAGC,EAAH,EAAGA,GAAIjB,EAAP,EAAOA,KAAMkB,EAAb,EAAaA,OAAb,OACZ,qBAAaH,UAAU,gBAAvB,UACE,uBAAMA,UAAU,qBAAhB,UAAsCf,EAAtC,OACA,sBAAMe,UAAU,qBAAhB,SAAsCG,IACtC,wBACEC,KAAK,SACLJ,UAAU,gBACVK,QAAS,kBAAMjB,GFcEkB,EEdqBJ,EFcR,SAAAd,GACxCA,EAASmB,eAETvC,IACGwC,OADH,oBACuBF,IACpBb,MAAK,kBAAML,EAASqB,YAAqBH,OACzCV,OAAM,SAAAC,GAAK,OAAIT,EAASsB,YAAmBb,UANnB,IAAAS,GEjBnB,sBAHOJ,SCqDFS,EAnEK,WAClB,MAAwBC,mBAAS,IAAjC,mBAAO3B,EAAP,KAAa4B,EAAb,KACA,EAA4BD,mBAAS,IAArC,mBAAOT,EAAP,KAAeW,EAAf,KAEMzC,EAAW0B,YAAYtB,GACvBW,EAAWC,cAcX0B,EAAe,SAAAC,GAEnB,OADoBA,EAAEC,OAAOhC,MAE3B,IAAK,OACH4B,EAAQG,EAAEC,OAAOtD,OACjB,MACF,IAAK,SACHmD,EAAUE,EAAEC,OAAOtD,SAMzB,OACE,uBAAMqC,UAAU,eAAekB,SA1BZ,SAAAF,GAGnB,GAFAA,EAAEG,sBAEkB9D,IADAgB,EAAS+C,MAAK,SAAApC,GAAO,OAAIA,EAAQC,OAASA,KAE5DoC,MAAM,GAAD,OAAIpC,EAAJ,iCACA,CACkBG,EHM3B,SAAC,GAAD,uBAAEH,EAAF,KAAQkB,EAAR,YACA,SAAAf,GACE,IAAMJ,EAAU,CACdC,KAAMA,EACNkB,OAAQA,GAGVf,EAASkC,eAETtD,IACGuD,KAAK,YAAavC,GAClBS,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OAAcN,EAASoC,YAAkB9B,OAC9CE,OAAM,SAAAC,GAAK,OAAIT,EAASqC,YAAgB5B,QGlBT6B,CAAW,CAACzC,EAAMkB,KAGpDU,EAAQ,IACRC,EAAU,KAgBV,UACE,wBAAOd,UAAU,qBAAjB,iBAEE,uBACErC,MAAOsB,EACP0C,SAAUZ,EACVX,KAAK,OACLnB,KAAK,OACLe,UAAU,qBACV4B,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,OAGZ,wBAAO9B,UAAU,qBAAjB,mBAEE,uBACErC,MAAOwC,EACPwB,SAAUZ,EACVX,KAAK,MACLnB,KAAK,SACLe,UAAU,qBACV4B,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,OAGZ,wBAAQ1B,KAAK,SAASJ,UAAU,qBAAhC,6BC1CS+B,MAjBf,WACE,IAAMpE,EAAQoC,YAAYxB,GACpBa,EAAWC,cAEjB,OACE,wBAAOW,UAAU,eAAjB,kCAEE,uBACEI,KAAK,OACLzC,MAAOA,EACPgE,SAAU,SAAAX,GAAC,OAAI5B,EAAS4C,YAAahB,EAAEC,OAAOtD,SAC9CqC,UAAU,qBCVH,SAASb,IACtB,IAAM8C,EAAYlC,YAAY5B,GAE9B,OACE,gCACG8D,GAAa,4CACd,gCACE,oBAAIjC,UAAU,kBAAd,uBACA,cAAC,EAAD,OAGF,oBAAIA,UAAU,kBAAd,sBACA,cAAC,EAAD,IACA,cAACkC,EAAD","file":"static/js/4.c8e91e64.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import axios from 'axios';\nimport {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n} from './phone-actions';\n\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\n\nexport const fetchContacts = () => dispatch => {\n  dispatch(fetchContactsRequest());\n  axios\n    .get('/contacts')\n    .then(({ data }) => dispatch(fetchContactsSuccess(data)))\n    .catch(error => dispatch(fetchContactsError(error)));\n};\n\nexport const addContact =\n  ([name, number]) =>\n  dispatch => {\n    const contact = {\n      name: name,\n      number: number,\n    };\n\n    dispatch(addContactRequest());\n\n    axios\n      .post('/contacts', contact)\n      .then(({ data }) => dispatch(addContactSuccess(data)))\n      .catch(error => dispatch(addContactError(error)));\n  };\n\nexport const deleteContact = contactId => dispatch => {\n  dispatch(deleteContactRequest());\n\n  axios\n    .delete(`/contacts/${contactId}`)\n    .then(() => dispatch(deleteContactSuccess(contactId)))\n    .catch(error => dispatch(deleteContactError(error)));\n};\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getLoading = state => state.contacts.loading;\n\nexport const getFilter = state => state.contacts.filter;\n\nexport const getAllContacts = state => state.contacts.items;\n\nexport const getVisibleContacts = createSelector(\n  [getAllContacts, getFilter],\n  (contacts, filterV) => {\n    const normalizedFilter = filterV.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  },\n);\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport {\n  fetchContacts,\n  deleteContact,\n} from '../../redux/phonebook/phone-operations';\nimport { getVisibleContacts } from '../../redux/phonebook/phone-selectors';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => dispatch(fetchContacts()), [dispatch]);\n\n  const contacts = useSelector(getVisibleContacts);\n\n  return (\n    <ul className=\"contact-list\">\n      {contacts.map(({ id, name, number }) => (\n        <li key={id} className=\"contacts-item\">\n          <span className=\"contacts-item-name\">{name}:</span>\n          <span className=\"contacts-item-name\">{number}</span>\n          <button\n            type=\"button\"\n            className=\"TodoList__btn\"\n            onClick={() => dispatch(deleteContact(id))}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default Contacts;\n","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getAllContacts } from '../../redux/phonebook/phone-selectors';\nimport { addContact } from '../../redux/phonebook/phone-operations';\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contacts = useSelector(getAllContacts);\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const contactFind = contacts.find(contact => contact.name === name);\n    if (contactFind !== undefined) {\n      alert(`${name} is already in contacts.`);\n    } else {\n      const onSubmit = () => dispatch(addContact([name, number]));\n      onSubmit();\n    }\n    setName('');\n    setNumber('');\n  };\n  const handleChange = e => {\n    const valueOption = e.target.name;\n    switch (valueOption) {\n      case 'name':\n        setName(e.target.value);\n        break;\n      case 'number':\n        setNumber(e.target.value);\n        break;\n      default:\n        break;\n    }\n  };\n  return (\n    <form className=\"phonebookAdd\" onSubmit={handleSubmit}>\n      <label className=\"phonebookAdd-label\">\n        Name\n        <input\n          value={name}\n          onChange={handleChange}\n          type=\"text\"\n          name=\"name\"\n          className=\"phonebookAdd-input\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </label>\n      <label className=\"phonebookAdd-label\">\n        Number\n        <input\n          value={number}\n          onChange={handleChange}\n          type=\"tel\"\n          name=\"number\"\n          className=\"phonebookAdd-input\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n      </label>\n      <button type=\"submit\" className=\"TodoEditor__button\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getFilter } from '../../redux/phonebook/phone-selectors';\n\nimport { changeFilter } from '../../redux/phonebook/phone-actions';\n\nfunction Filter() {\n  const value = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <label className=\"filter-label\">\n      Find contacts by name\n      <input\n        type=\"text\"\n        value={value}\n        onChange={e => dispatch(changeFilter(e.target.value))}\n        className=\"filter-input\"\n      />\n    </label>\n  );\n}\n\nexport default Filter;\n","import { useSelector } from 'react-redux';\n\nimport ContactList from '../components/ContactList/ContactList';\nimport ContactForm from '../components/ContactForm/ContactForm';\nimport Filter from '../components/Filter/Filter';\nimport { getLoading } from '../redux/phonebook/phone-selectors';\n\nexport default function Contacts() {\n  const isLoading = useSelector(getLoading);\n\n  return (\n    <div>\n      {isLoading && <h1>Loading...</h1>}\n      <div>\n        <h2 className=\"phonebook-title\">Phonebook</h2>\n        <ContactForm />\n      </div>\n\n      <h3 className=\"phonebook-title\">Contacts</h3>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n"],"sourceRoot":""}