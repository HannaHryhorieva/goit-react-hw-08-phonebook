{"version":3,"sources":["redux/phonebook/phone-actions.js","redux/login/auth-selectors.js","redux/login/auth-operations.js","redux/login/auth-actions.js","redux/login/auth-reducer.js","redux/phonebook/phone-reducer.js","redux/store.js","components/Navigation.js","components/UserMenu.js","components/AuthNav.js","components/AppBar.js","components/PrivateRoute.js","components/PublicRoute.js","App.js","index.js"],"names":["fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","getIsLoggedIn","state","auth","isLoggedIn","getUseremail","user","email","axios","defaults","baseURL","token","headers","common","operations","register","name","password","dispatch","registerRequest","post","then","data","registerSuccess","catch","error","registerError","logOut","logOutRequest","logOutSuccess","logOutError","logIn","logInRequest","logInSuccess","logInError","fetchCurrentUser","getState","a","persistedToken","fetchCurrentUserRequest","get","response","fetchCurrentUserSuccess","fetchCurrentUserError","message","initialUserState","createReducer","_","payload","setError","isFetchingCurrentUser","combineReducers","items","filter","id","loading","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","authReducer","contacts","phonebookReducer","devTools","process","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","concat","logger","persistor","persistStore","styles","link","display","textDecoration","padding","fontWeight","color","activeLink","Navigation","useSelector","to","exact","style","activeStyle","container","alignItems","avatar","marginRight","UserMenu","useDispatch","type","onClick","AuthNav","header","justifyContent","borderBottom","AppBar","PrivateRoute","children","redirectTo","routeProps","PublicRoute","restricted","shouldRedirect","HomeView","lazy","RegisterView","LoginView","Conacts","App","useEffect","fallback","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.945f92c4.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchContactsRequest = createAction(\n  'phonebook/fetchContactsRequest',\n);\nexport const fetchContactsSuccess = createAction(\n  'phonebook/fetchContactsSuccess',\n);\nexport const fetchContactsError = createAction('phonebook/fetchContactsError');\n\nexport const addContactRequest = createAction('phonebook/addContactRequest');\nexport const addContactSuccess = createAction('phonebook/addContactSuccess');\nexport const addContactError = createAction('phonebook/addContactError');\n\nexport const deleteContactRequest = createAction(\n  'phonebook/deleteContactRequest',\n);\nexport const deleteContactSuccess = createAction(\n  'phonebook/deleteContactSuccess',\n);\nexport const deleteContactError = createAction('phonebook/deleteContactError');\n\nexport const changeFilter = createAction('phonebook/changeFilter');\n","export const getIsLoggedIn = state => state.auth.isLoggedIn;\n\nexport const getUsername = state => state.auth.user.name;\nexport const getUseremail = state => state.auth.user.email;\n\nexport const getIsFetchingCurrent = state => state.auth.isFetchingCurrentUser;\n","import axios from 'axios';\n\nimport {\n  registerRequest,\n  registerSuccess,\n  registerError,\n  logInRequest,\n  logInSuccess,\n  logInError,\n  logOutRequest,\n  logOutSuccess,\n  logOutError,\n  fetchCurrentUserRequest,\n  fetchCurrentUserSuccess,\n  fetchCurrentUserError,\n} from './auth-actions';\n\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common['Authorization'] = `${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common['Authorization'] = '';\n  },\n};\n\nconst register =\n  ({ name, email, password }) =>\n  dispatch => {\n    const user = {\n      name,\n      email,\n      password,\n    };\n    dispatch(registerRequest());\n    axios\n      .post('/users/signup', user)\n      .then(({ data }) => {\n        token.set(data.token);\n        dispatch(registerSuccess(data));\n      })\n      .catch(error => dispatch(registerError(error)));\n  };\n\nconst logIn =\n  ({ email, password }) =>\n  dispatch => {\n    const user = {\n      email,\n      password,\n    };\n    dispatch(logInRequest());\n    axios\n      .post('/users/login', user)\n      .then(({ data }) => {\n        token.set(data.token);\n        dispatch(logInSuccess(data));\n      })\n      .catch(error => dispatch(logInError(error)));\n  };\n\nconst logOut = () => dispatch => {\n  dispatch(logOutRequest());\n  axios\n    .post('/users/logout')\n    .then(() => {\n      token.unset();\n      dispatch(logOutSuccess());\n    })\n    .catch(error => dispatch(logOutError(error)));\n};\n\nconst fetchCurrentUser = () => async (dispatch, getState) => {\n  const {\n    auth: { token: persistedToken },\n  } = getState();\n\n  if (!persistedToken) {\n    return;\n  }\n\n  token.set(persistedToken);\n  dispatch(fetchCurrentUserRequest());\n\n  try {\n    const response = await axios.get('/users/current');\n\n    dispatch(fetchCurrentUserSuccess(response.data));\n  } catch (error) {\n    dispatch(fetchCurrentUserError(error.message));\n  }\n};\n\nconst operations = {\n  register,\n  logOut,\n  logIn,\n  fetchCurrentUser,\n};\nexport default operations;\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const registerRequest = createAction('auth/registerRequest');\nexport const registerSuccess = createAction('auth/registerSuccess');\nexport const registerError = createAction('auth/registerError');\n\nexport const logInRequest = createAction('auth/logInRequest');\nexport const logInSuccess = createAction('auth/logInSuccess');\nexport const logInError = createAction('auth/logInError');\n\nexport const logOutRequest = createAction('auth/logOutRequest');\nexport const logOutSuccess = createAction('auth/logOutSuccess');\nexport const logOutError = createAction('auth/logOutError');\n\nexport const fetchCurrentUserRequest = createAction(\n  'auth/fetchCurrentUserRequest',\n);\nexport const fetchCurrentUserSuccess = createAction(\n  'auth/fetchCurrentUserSuccess',\n);\nexport const fetchCurrentUserError = createAction('auth/fetchCurrentUserError');\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\n\nimport {\n  //   registerRequest,\n  registerSuccess,\n  registerError,\n  //   logInRequest,\n  logInSuccess,\n  logInError,\n  //   logOutRequest,\n  logOutSuccess,\n  logOutError,\n  fetchCurrentUserRequest,\n  fetchCurrentUserSuccess,\n  fetchCurrentUserError,\n} from './auth-actions';\n\nconst initialUserState = { name: null, email: null };\n\nconst user = createReducer(initialUserState, {\n  [registerSuccess]: (_, { payload }) => payload.user,\n  [logInSuccess]: (_, { payload }) => payload.user,\n  [logOutSuccess]: () => initialUserState,\n  [fetchCurrentUserSuccess]: (_, { payload }) => payload,\n});\n\nconst token = createReducer(null, {\n  [registerSuccess]: (_, { payload }) => payload.token,\n  [logInSuccess]: (_, { payload }) => payload.token,\n  [logOutSuccess]: () => null,\n});\n\nconst setError = (_, { payload }) => payload;\n\nconst error = createReducer(null, {\n  [registerError]: setError,\n  [logInError]: setError,\n  [logOutError]: setError,\n  [fetchCurrentUserError]: setError,\n});\n\nconst isLoggedIn = createReducer(false, {\n  [registerSuccess]: () => true,\n  [logInSuccess]: () => true,\n  [fetchCurrentUserSuccess]: () => true,\n  [registerError]: () => false,\n  [logInError]: () => false,\n  [fetchCurrentUserError]: () => false,\n  [logOutSuccess]: () => false,\n});\n\nconst isFetchingCurrentUser = createReducer(false, {\n  [fetchCurrentUserRequest]: () => true,\n  [fetchCurrentUserSuccess]: () => false,\n  [fetchCurrentUserError]: () => false,\n});\nexport default combineReducers({\n  user,\n  isLoggedIn,\n  token,\n  isFetchingCurrentUser,\n  error,\n});\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  changeFilter,\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n} from './phone-actions';\n\nconst items = createReducer([], {\n  [fetchContactsSuccess]: (_, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\nconst loading = createReducer(false, {\n  [fetchContactsRequest]: () => true,\n  [fetchContactsSuccess]: () => false,\n  [fetchContactsError]: () => false,\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false,\n});\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nconst error = createReducer(null, {});\n\nexport default combineReducers({\n  items,\n  filter,\n  loading,\n  error,\n});\n","import { configureStore } from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nimport logger from 'redux-logger';\nimport authReducer from './login/auth-reducer';\nimport phonebookReducer from './phonebook/phone-reducer';\n\nconst authPersistConfig = {\n  key: 'auth',\n  storage,\n  whitelist: ['token'],\n};\n\nexport const store = configureStore({\n  reducer: {\n    auth: persistReducer(authPersistConfig, authReducer),\n    contacts: phonebookReducer,\n  },\n  devTools: process.env.NODE_ENV === 'development',\n  middleware: getDefaultMiddleware =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }).concat(logger),\n});\n\nexport const persistor = persistStore(store);\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { getIsLoggedIn } from '../redux/login/auth-selectors';\n\nconst styles = {\n  link: {\n    display: 'inline-block',\n    textDecoration: 'none',\n    padding: 12,\n    fontWeight: 700,\n    color: '#2A363B',\n  },\n  activeLink: {\n    color: '#E84A5F',\n  },\n};\n\nconst Navigation = () => {\n  const isLoggedIn = useSelector(getIsLoggedIn);\n  return (\n    <nav>\n      <NavLink to=\"/\" exact style={styles.link} activeStyle={styles.activeLink}>\n        Home\n      </NavLink>\n\n      {isLoggedIn && (\n        <>\n          <NavLink\n            to=\"/contacts\"\n            exact\n            style={styles.link}\n            activeStyle={styles.activeLink}\n          >\n            Phone book\n          </NavLink>\n        </>\n      )}\n    </nav>\n  );\n};\n\nexport default Navigation;\n","import { useDispatch, useSelector } from 'react-redux';\nimport operations from '../redux/login/auth-operations';\nimport { getUseremail } from '../redux/login/auth-selectors';\n\nconst styles = {\n  container: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  avatar: {\n    marginRight: 4,\n  },\n  name: {\n    fontWeight: 700,\n    marginRight: 12,\n  },\n};\n\nexport default function UserMenu() {\n  const dispatch = useDispatch();\n  const email = useSelector(getUseremail);\n\n  return (\n    <div style={styles.container}>\n      <span style={styles.name}>{email}</span>\n      <button type=\"button\" onClick={() => dispatch(operations.logOut())}>\n        Sign out\n      </button>\n    </div>\n  );\n}\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst styles = {\n  link: {\n    display: 'inline-block',\n    textDecoration: 'none',\n    padding: 12,\n    fontWeight: 700,\n    color: '#2A363B',\n  },\n  activeLink: {\n    color: '#E84A5F',\n  },\n};\n\nexport default function AuthNav() {\n  return (\n    <div>\n      <NavLink\n        to=\"/register\"\n        exact\n        style={styles.link}\n        activeStyle={styles.activeLink}\n      >\n        Register\n      </NavLink>\n      <NavLink\n        to=\"/login\"\n        exact\n        style={styles.link}\n        activeStyle={styles.activeLink}\n      >\n        Sign in\n      </NavLink>\n    </div>\n  );\n}\n","import { useSelector } from 'react-redux';\nimport Navigation from './Navigation';\nimport UserMenu from './UserMenu';\nimport AuthNav from './AuthNav';\nimport { getIsLoggedIn } from '../redux/login/auth-selectors';\n\nconst styles = {\n  header: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    borderBottom: '1px solid #2A363B',\n  },\n};\n\nexport default function AppBar() {\n  const isLoggedIn = useSelector(getIsLoggedIn);\n  return (\n    <header style={styles.header}>\n      <Navigation />\n      {isLoggedIn ? <UserMenu /> : <AuthNav />}\n    </header>\n  );\n}\n","import { useSelector } from 'react-redux';\nimport { Route, Redirect } from 'react-router-dom';\nimport { getIsLoggedIn } from '../redux/login/auth-selectors';\n\nexport default function PrivateRoute({\n  children,\n  redirectTo = '/',\n  ...routeProps\n}) {\n  const isLoggedIn = useSelector(getIsLoggedIn);\n  return (\n    <Route {...routeProps}>\n      {isLoggedIn ? children : <Redirect to={redirectTo} />}\n    </Route>\n  );\n}\n","import { useSelector } from 'react-redux';\nimport { Route, Redirect } from 'react-router-dom';\nimport { getIsLoggedIn } from '../redux/login/auth-selectors';\n\nexport default function PublicRoute({\n  children,\n  restricted = false,\n  redirectTo = '/',\n  ...routeProps\n}) {\n  const isLoggedIn = useSelector(getIsLoggedIn);\n  const shouldRedirect = isLoggedIn && restricted;\n  return (\n    <Route {...routeProps}>\n      {shouldRedirect ? <Redirect to={redirectTo} /> : children}\n    </Route>\n  );\n}\n","import './App.css';\nimport { useEffect, Suspense, lazy } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Switch, Route } from 'react-router-dom';\nimport AppBar from './components/AppBar';\n\nimport PrivateRoute from './components/PrivateRoute';\nimport PublicRoute from './components/PublicRoute';\n\nimport operations from './redux/login/auth-operations';\n\nconst HomeView = lazy(() => import('./views/HomeView'));\nconst RegisterView = lazy(() => import('./views/Register'));\nconst LoginView = lazy(() => import('./views/Login'));\nconst Conacts = lazy(() => import('./views/Contacts'));\n\nexport default function App() {\n  const dispatch = useDispatch();\n  // const isFetchingCurrentUser = useSelector(authSelectors.getIsFetchingCurrent);\n\n  useEffect(() => {\n    dispatch(operations.fetchCurrentUser());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <AppBar />\n      <Switch>\n        <Suspense fallback={<p>Загружаем...</p>}>\n          <PublicRoute exact path=\"/\">\n            <HomeView />\n          </PublicRoute>\n          <PublicRoute exact path=\"/register\" restricted>\n            <RegisterView />\n          </PublicRoute>\n          <PublicRoute exact path=\"/login\" redirectTo=\"/contacts\" restricted>\n            <LoginView />\n          </PublicRoute>\n          <PrivateRoute path=\"/contacts\" redirectTo=\"/login\">\n            <Conacts />\n          </PrivateRoute>\n        </Suspense>\n        <Route>\n          <HomeView />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from './redux/store';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}